@page "/monitoring"
@using Radzen
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject IJSRuntime JS

@if (TotalMetrics == null)
{
    <div class="rz-m-12">
        <RadzenProgressBar @bind-Value="@Progress" />
    </div>
}
else
{
    <PageTitle>@data.Informasi_monitoring?.Nama</PageTitle>
    <h1>@data.Informasi_monitoring?.Nama</h1>
    <p>
        Mopoen ID @data.Informasi_monitoring?.Monitoring_id
        menggunakan sensor @data.Informasi_monitoring?.Tipe_sensor
        di lokasi @data.Informasi_monitoring?.Alamat.
    </p>
    <p>@data.Informasi_monitoring?.Keterangan</p>
    <button class="btn-primary" onclick="window.open('@downloadPath()');">download csv</button>
    <RadzenRow JustifyContent="@JustifyContent.Normal" AlignItems="@AlignItems.Normal" Gap="1rem">
    <RadzenColumn Size="6" class="rz-color-info-dark rz-text-align-center rz-p-2">
        <RadzenChart>
            <RadzenColumnSeries Data="@AverageMetrics" CategoryProperty="Time" ValueProperty="Value" />
        </RadzenChart>
    </RadzenColumn>
    <RadzenColumn Size="6" class="rz-color-info-dark rz-text-align-center rz-p-2">
    <RadzenChart>
        <RadzenAreaSeries Data="@TotalMetrics" CategoryProperty="Time" Title="Data Total" ValueProperty="Value" RenderingOrder="1">
            <RadzenSeriesDataLabels Visible="false" />
        </RadzenAreaSeries>
        <RadzenAreaSeries Data="@AverageMetrics" CategoryProperty="Time" Title="Average" LineType="LineType.Dashed" ValueProperty="Value">
            <RadzenSeriesDataLabels Visible="false" />
        </RadzenAreaSeries>
        <RadzenCategoryAxis Padding="1" />
        <RadzenValueAxis>
            <RadzenGridLines Visible="true" />
            <RadzenAxisTitle Text="Average and total comparison" />
        </RadzenValueAxis>
    </RadzenChart>
    </RadzenColumn>
    </RadzenRow>
}

@code {
    private string path = "http://localhost:8080/api/v1";
    private AnalisaMonitoring data = new AnalisaMonitoring();
    private DataItem[]? AverageMetrics;
    private DataItem[]? TotalMetrics;
    private double Progress = 0;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavigationManager.ToAbsoluteUri(NavigationManager.Uri);
        var query = QueryHelpers.ParseQuery(uri.Query);
        if (!query.ContainsKey("id")) return;
        Id = query["id"];
        Progress = 30;

        data = await Http.GetFromJsonAsync<AnalisaMonitoring>($"{path}/monitoring/analisa/{Id}") ?? data;
        Progress = 60;

        AverageMetrics = new DataItem[]
        {
            new DataItem { Time = "Pagi", Value = data.Pagi?.Average ?? 0 },
            new DataItem { Time = "Siang", Value = data.Siang?.Average ?? 0 },
            new DataItem { Time = "Sore", Value = data.Sore?.Average ?? 0 },
            new DataItem { Time = "Malam", Value = data.Malam?.Average ?? 0 },
        };
        Progress = 80;
        TotalMetrics = new DataItem[]
        {
            new DataItem { Time = "Pagi", Value = data.Pagi?.Total ?? 0 },
            new DataItem { Time = "Siang", Value = data.Siang?.Total ?? 0 },
            new DataItem { Time = "Sore", Value = data.Sore?.Total ?? 0 },
            new DataItem { Time = "Malam", Value = data.Malam?.Total ?? 0 },
        };
        Progress = 100;
    }

    private string downloadPath()
    {
        return $"localhost:8080/download/monitoring/{Id}.csv";
    }

    public class AnalisaMonitoring
    {
        public MonitoringInfo? Informasi_monitoring { get; set; }
        public ResultMonitoring? Overall { get; set; }
        public ResultMonitoring? Pagi { get; set; }
        public ResultMonitoring? Siang { get; set;}
        public ResultMonitoring? Sore { get; set;}
        public ResultMonitoring? Malam { get; set;}
    }

    public class MonitoringInfo
    {
        public string Monitoring_id { get; set; } = string.Empty;
        public string Tipe_sensor { get; set; } = string.Empty;
        public string Nama { get; set; } = string.Empty;
        public string Keterangan { get; set; } = string.Empty;
        public string Alamat { get; set; } = string.Empty;
    }

    public class ResultMonitoring
    {
        public int Total { get; set; }
        public float Average { get; set; }
    }

    public class DataItem
    {
      public string Time { get; set; } = string.Empty;
      public float Value { get; set; }
    }

    public string Id { get; set; } = string.Empty;
}
