@page "/daftar"
@inject HttpClient Http
@inject NotificationService NotificationService
@using Microsoft.Extensions.Configuration
@inject IConfiguration cfg

<PageTitle>Pendaftaran Mopoen</PageTitle>

@if (init)
{
<RadzenTemplateForm Data="@montd" Submit="@(async (MonitoringTerdaftar args) => { await OnSubmit(args); })">
    <RadzenRow Gap="2rem" Class="rz-p-0 rz-p-lg-4">
        <RadzenColumn Size="12" SizeMD="6">
            <RadzenStack>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Tipe Sensor" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDropDown @bind-Value="montd.tipe_sensor_id" AllowClear="true" Placeholder="Tipe Sensor" Data="@tipe_sensors" Style="width: 100%;" TextProperty="Tipe" ValueProperty="Id" Name="tipe_sensor_id"></RadzenDropDown>
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Tipe Sensor" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenDropDown @bind-Value="montd.lokasi_id" AllowClear="true" Placeholder="Lokasi" Data="@LLokasi" Style="width: 100%;" TextProperty="Nama" ValueProperty="Id" Name="lokasi_id"></RadzenDropDown>
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Author" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox @bind-Value="montd.author" Style="width: 100%;" Name="author" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Email" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox @bind-Value="montd.email" Style="width: 100%;" Name="email" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Nama" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox @bind-Value="montd.nama" Style="width: 100%;" Name="nama" />
                    </RadzenColumn>
                </RadzenRow>
                <RadzenRow AlignItems="AlignItems.Center">
                    <RadzenColumn Size="12" SizeMD="4">
                        <RadzenLabel Text="Keterangan" />
                    </RadzenColumn>
                    <RadzenColumn Size="12" SizeMD="8">
                        <RadzenTextBox @bind-Value="montd.keterangan" Style="width: 100%;" Name="keterangan" />
                    </RadzenColumn>
                </RadzenRow>
            </RadzenStack>
        </RadzenColumn>
    </RadzenRow>
    <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
        <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Large" Icon="save" Text="Save" />
        <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Large" Icon="cancel" Text="Cancel" Click="@Cancel" />
    </RadzenStack>
</RadzenTemplateForm>
}

@code {
    private string addr = "localhost:8080";
    private bool init = false;
    private MonitoringTerdaftar montd = new MonitoringTerdaftar();
    private TipeSensor[]? tipe_sensors;

    @* List Lokasi *@
    private Lokasi[]? LLokasi;

    protected override async Task OnInitializedAsync()
    {
        string value = Environment.GetEnvironmentVariable("VARIABLE_NAME") ?? string.Empty;
        value = value == string.Empty?cfg["ApiAddress"]:value??addr;
        addr=value;
        
        var data = await Http.GetFromJsonAsync<Dictionary<string, TipeSensor[]>?>($"http://{addr}/api/v1/sensors");
        if (data == null) {
            return;
        }

        if (data.ContainsKey("data")) {
            var dd = data["data"];
            tipe_sensors = dd;
        }

        var dataProvinsi = await Http.GetFromJsonAsync<Dictionary<string, Lokasi[]>?>($"http://{addr}/api/v1/lokasi/parent");
        if (dataProvinsi == null) {
            return;
        }

        if (dataProvinsi.ContainsKey("data")) {
            var dd = dataProvinsi["data"];
            LLokasi = dd;
        }

        init = true;
    }

    public class MonitoringTerdaftar
    {
        public int tipe_sensor_id { get; set; }
        public int lokasi_id { get; set; }
        public string author { get; set; } = string.Empty;
        public string email { get; set; } = string.Empty;
        public string nama { get; set; } = string.Empty;
        public string keterangan { get; set; } = string.Empty;
    }

    public class TipeSensor
    {
        public int Id { get; }
        public string? Tipe { get; }
        public string? Satuan { get; }

        public TipeSensor(int id, string? tipe, string? satuan)
        {
            this.Id = id;
            this.Tipe = tipe ?? string.Empty;
            this.Satuan = satuan ?? string.Empty;
        }
    }

    protected async Task OnSubmit(MonitoringTerdaftar args)
    {
        var postForm = await Http.PostAsJsonAsync<MonitoringTerdaftar>($"http://{addr}/api/v1/monitoring/daftar", args);
        if (postForm.IsSuccessStatusCode) {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = args.nama, Detail = "Pendaftaran berhasil" });
        } else {
            NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Error, Summary = args.nama, Detail = "Pendaftaran gagal" });
        }
    }

    public void Cancel()
    {
        montd = new MonitoringTerdaftar();
    }

    public class Lokasi
    {
        public int Id { get; }
        public string? Nama { get; }

        public Lokasi(int id, string? nama)
        {
            this.Id = id;
            this.Nama = nama ?? string.Empty;
        }
    }
}
